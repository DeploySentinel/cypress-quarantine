{"code":"import { __assign, __extends, __values } from \"tslib\";\r\nimport minimatch from 'minimatch';\r\nimport some from 'lodash/some';\r\nimport config from './config';\r\nimport APIClient, { Logger } from './clients/api';\r\nimport rr from './modules/rr';\r\nimport { CypressTestCache, formatLog, getCypressTestId, getCypressTestUniqueName, } from './utils/browser';\r\nimport { DEFAULT_DS_TASK_TIMEOUT, EventsHandler, NETWORK_MOCKS_CACHE_FOLDER_NAME, REQUEST_TIMEOUT, createDeploySentinelEvent, performanceNow, shouldAttachDebugger, stringifyAndPackArtifacts, tryJSONStringify, uploadToS3, } from './utils/shared';\r\nimport { CypressRunState, LoggerSeverity, Task, } from './types';\r\nvar BrowserEventsHandler = /** @class */ (function (_super) {\r\n    __extends(BrowserEventsHandler, _super);\r\n    function BrowserEventsHandler() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // TODO: Memoize this\r\n    BrowserEventsHandler.prototype.getLastDomEvent = function () {\r\n        for (var i = this.events.length - 1; i >= 0; i--) {\r\n            if (this.events[i].type === 'dom') {\r\n                return this.events[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return BrowserEventsHandler;\r\n}(EventsHandler));\r\n// Global vars\r\nvar isOpenMode = Cypress.config('isInteractive');\r\nvar isComponentTest = Boolean(Cypress.config('devServer'));\r\nvar apiKey = config.DS_API_KEY;\r\nvar logVerbose = config.LOG_VERBOSE;\r\nvar getFilePath = function () { return Cypress.spec.relative; };\r\nvar uploadToS3Promises = [];\r\nvar cypressTestCache = new CypressTestCache(getFilePath);\r\nvar allCyTestIds = new Set();\r\nvar eventsHandler = new BrowserEventsHandler();\r\nvar filePathMap = new Map();\r\nvar logEventLookupMap = new Map();\r\nvar uploadedToS3CyTestIds = new Set();\r\nvar windowLocation = null;\r\n// Locally stores all mock data for this spec file\r\nvar routesByTestId = {};\r\n// This is used to access the rrweb instance after the window has loaded\r\nvar curRrweb;\r\nvar remoteLogger;\r\nvar apiClient;\r\nif (apiKey && !isOpenMode) {\r\n    apiClient = new APIClient({\r\n        apiKey: apiKey,\r\n        baseUrl: config.API_BASE_URL,\r\n        buildId: undefined,\r\n        getRuntimeMetrics: function () { return null; },\r\n        verbose: logVerbose,\r\n    });\r\n    remoteLogger = new Logger(apiClient);\r\n}\r\nvar logger = {\r\n    info: function (message) {\r\n        executeCyTask(Task.SendMessage, {\r\n            location: message.location,\r\n            message: message.message,\r\n            severity: LoggerSeverity.Info,\r\n            meta: __assign(__assign({}, message.meta), { isOpenMode: isOpenMode }),\r\n        });\r\n    },\r\n    warning: function (message) {\r\n        executeCyTask(Task.SendMessage, {\r\n            location: message.location,\r\n            message: message.message,\r\n            severity: LoggerSeverity.Warning,\r\n            meta: __assign(__assign({}, message.meta), { isOpenMode: isOpenMode }),\r\n        });\r\n    },\r\n    error: function (message) {\r\n        if (remoteLogger) {\r\n            remoteLogger.error(__assign(__assign({}, message), { meta: __assign(__assign({}, message.meta), { isOpenMode: isOpenMode }) }));\r\n        }\r\n        else {\r\n            console.error(message);\r\n        }\r\n    },\r\n};\r\n// WARNING: make sure to use this method to execute tasks\r\n// promise should always resolve or cy.wrap will stop the test\r\nvar executeCyTask = function (event, arg, options) {\r\n    // verify arg size\r\n    var stringifiedArg = tryJSONStringify(arg);\r\n    if (stringifiedArg && stringifiedArg.length > 8 * 1e6) {\r\n        logger.error({\r\n            location: 'executeCyTask',\r\n            message: new Error('Unable to send payload larger than 8 mb'),\r\n            meta: {\r\n                arg: stringifiedArg ? arg : 'ERROR: UNABLE TO STRINGIFY',\r\n                event: event,\r\n                options: options,\r\n            },\r\n        });\r\n        return Cypress.Promise.resolve(null);\r\n    }\r\n    return new Cypress.Promise(function (resolve) {\r\n        cy\r\n            .now('task', event, arg, __assign({ \r\n            // default options\r\n            log: false, timeout: DEFAULT_DS_TASK_TIMEOUT }, options))\r\n            .then(function (resp) { return resolve(resp); })\r\n            // theoretically, all tasks exception go to here\r\n            .catch(function (e) {\r\n            logger.error({\r\n                location: 'executeCyTask',\r\n                message: e,\r\n                meta: {\r\n                    arg: stringifiedArg ? arg : 'ERROR: UNABLE TO STRINGIFY',\r\n                    event: event,\r\n                    options: options,\r\n                },\r\n            });\r\n            resolve(null);\r\n        });\r\n    });\r\n};\r\nvar awaitCyTasks = function (cyTasks, defaultTimeout) {\r\n    if (defaultTimeout === void 0) { defaultTimeout = DEFAULT_DS_TASK_TIMEOUT; }\r\n    return cy.wrap(Cypress.Promise.all(cyTasks), {\r\n        // WARNING: cy.wrap has to wait, but it shouldn't timeout whatsoever\r\n        // assuming the time between each task is less than defaultTimeout\r\n        timeout: defaultTimeout * cyTasks.length * 2,\r\n        log: false,\r\n    });\r\n};\r\nfunction getRrwebNodeIdsFromJquery($el) {\r\n    var _a;\r\n    if ($el != null &&\r\n        typeof $el.each === 'function' &&\r\n        ((_a = curRrweb === null || curRrweb === void 0 ? void 0 : curRrweb.mirror) === null || _a === void 0 ? void 0 : _a.getId) != null) {\r\n        var domElements_1 = [];\r\n        $el.each(function () {\r\n            domElements_1.push(this);\r\n        });\r\n        // -1 means the element is not serialized by RRweb (eg. it's gone or not rendered yet)\r\n        // FIXME: type curRrweb\r\n        var rrWebIds = domElements_1\r\n            .map(function (elem) { return curRrweb.mirror.getId(elem); })\r\n            .filter(function (id) { return id > -1; });\r\n        return rrWebIds;\r\n    }\r\n    return [];\r\n}\r\nvar clearLocalCacheBetweenEachTest = function () {\r\n    eventsHandler.clear();\r\n    logEventLookupMap.clear();\r\n};\r\nvar clearAllLocalCache = function () {\r\n    clearLocalCacheBetweenEachTest();\r\n    allCyTestIds.clear();\r\n    filePathMap.clear();\r\n    uploadedToS3CyTestIds.clear();\r\n};\r\nvar shouldRunGivenFilePath = function (filePath) {\r\n    if (config.SPEC) {\r\n        return config.SPEC.split(',')\r\n            .map(function (spec) { return spec.trim(); })\r\n            .some(function (spec) { return minimatch(filePath, spec); });\r\n    }\r\n    return true;\r\n};\r\nvar shouldUploadArtifacts = function (currentTest) {\r\n    // no need to upload skipped test artifacts\r\n    if (currentTest.state === CypressRunState.Pending) {\r\n        return false;\r\n    }\r\n    if (isOpenMode) {\r\n        return true;\r\n    }\r\n    return (currentTest.state === CypressRunState.Failed || config.UPLOAD_ON_PASSES);\r\n};\r\nvar wrapEventHandler = function (_a) {\r\n    var event = _a.event, handler = _a.handler, log = _a.log;\r\n    try {\r\n        if (log) {\r\n            logger.info({\r\n                location: event,\r\n                message: \"entering browser \".concat(event, \" hook\"),\r\n            });\r\n        }\r\n        handler();\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        logger.error({\r\n            location: event,\r\n            message: e,\r\n        });\r\n    }\r\n    finally {\r\n        if (log) {\r\n            logger.info({\r\n                location: event,\r\n                message: \"exiting browser \".concat(event, \" hook\"),\r\n            });\r\n        }\r\n    }\r\n};\r\n// disable setTimeout for component tests since cy.clock overrides setTimeout\r\n// which causes debugger to timeout\r\nvar maybeSetTimeout = function (fn, ms) {\r\n    if (isComponentTest) {\r\n        fn();\r\n    }\r\n    else {\r\n        setTimeout(fn, ms);\r\n    }\r\n};\r\nvar tryToTakeASnapshot = function () {\r\n    // Try to take a snapshot just in case the test doesn't load a new page\r\n    cy.window({ log: false }).then(function (win) {\r\n        maybeSetTimeout(function () {\r\n            var _a, _b;\r\n            if ((win === null || win === void 0 ? void 0 : win.rrwebRecord) == null) {\r\n                logger.info({\r\n                    location: 'handlerBeforeEach',\r\n                    message: 'rrwebRecord is not defined in window',\r\n                });\r\n                injectRrweb(win);\r\n            }\r\n            else if (typeof ((_a = win === null || win === void 0 ? void 0 : win.rrwebRecord) === null || _a === void 0 ? void 0 : _a.takeFullSnapshot) !== 'function') {\r\n                logger.info({\r\n                    location: 'handlerBeforeEach',\r\n                    message: 'rrwebRecord takeFullSnapshot is not a function',\r\n                });\r\n            }\r\n            (_b = win === null || win === void 0 ? void 0 : win.rrwebRecord) === null || _b === void 0 ? void 0 : _b.takeFullSnapshot();\r\n        }, 0);\r\n    });\r\n};\r\n// ************************************\r\n// ************ Commands **************\r\n// ************************************\r\nCypress.Commands.add('dsAddEvent', function () {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    try {\r\n        var stringifiedMetadata = JSON.stringify(args);\r\n        // size check\r\n        if (stringifiedMetadata.length > 4 * 1e6) {\r\n            throw new Error('custom event size exceeds max limit 4 MB');\r\n        }\r\n        executeCyTask(Task.PushPluginEvent, createDeploySentinelEvent('custom', args));\r\n    }\r\n    catch (e) {\r\n        logger.error({\r\n            location: 'commands:dsAddEvent',\r\n            message: e,\r\n        });\r\n        // push customer-facing error\r\n        executeCyTask(Task.PushPluginEvent, createDeploySentinelEvent('custom', {}, {\r\n            message: e.message,\r\n        }));\r\n    }\r\n});\r\n// ************************************\r\n// ************ Handlers **************\r\n// ************************************\r\nvar handleTestBeforeRun = function (currentTest) { return function () {\r\n    cypressTestCache.set(currentTest);\r\n    // WARNING: we can't fire logger.info here (unless the request is fired on the client side)\r\n    clearLocalCacheBetweenEachTest();\r\n    // WARNING: have to start CRIClient here (it gets cut off between test cases / specs)\r\n    executeCyTask(Task.StartCRI, null);\r\n    // tryToTakeASnapshot(); // if test fails in before hook\r\n}; };\r\nvar handleWindowBeforeLoad = function (win) { return function () {\r\n    try {\r\n        injectRrweb(win);\r\n    }\r\n    catch (e) {\r\n        // we might get a window handle for a cross origin window when using cy.origin, so we'll just catch and silence the error if that happens\r\n    }\r\n}; };\r\nvar handleWindowLoad = function (win) { return function () {\r\n    try {\r\n        injectRrweb(win);\r\n    }\r\n    catch (e) {\r\n        // we might get a window handle for a cross origin window when using cy.origin, so we'll just catch and silence the error if that happens\r\n    }\r\n}; };\r\nvar handlerBefore = function () { return function () {\r\n    var cyTasks = [];\r\n    executeCyTask(Task.SupportFileIsDetected, null).then(function (buildId) {\r\n        apiClient === null || apiClient === void 0 ? void 0 : apiClient.setBuildId(buildId);\r\n    });\r\n    // Clear network mocks\r\n    cyTasks.push(executeCyTask(Task.ClearMocks, getFilePath()));\r\n    // Load network mocks\r\n    var startT = Date.now();\r\n    cyTasks.push(executeCyTask(Task.ReadMockFile, getFilePath()).then(function (data) {\r\n        var hasMocks = data !== null;\r\n        if (hasMocks) {\r\n            routesByTestId = JSON.parse(data);\r\n            executeCyTask(Task.Debug, \"[Browser] receiving all network mocks took \".concat(Date.now() - startT, \" ms\"));\r\n        }\r\n        else {\r\n            routesByTestId = {};\r\n        }\r\n    }));\r\n    awaitCyTasks(cyTasks);\r\n}; };\r\nvar handlerBeforeEach = function (currentTest) { return function () {\r\n    var e_1, _a, e_2, _b, e_3, _c;\r\n    cypressTestCache.set(currentTest);\r\n    tryToTakeASnapshot();\r\n    var cyTasks = [];\r\n    var filePath = getFilePath();\r\n    var testName = getCypressTestUniqueName(currentTest);\r\n    // intercept networks\r\n    if (testName in routesByTestId) {\r\n        var sortedRoutes_1 = {};\r\n        try {\r\n            for (var _d = __values(routesByTestId[testName]), _e = _d.next(); !_e.done; _e = _d.next()) {\r\n                var request = _e.value;\r\n                if (!sortedRoutes_1[request.method]) {\r\n                    sortedRoutes_1[request.method] = {};\r\n                }\r\n                if (!sortedRoutes_1[request.method][request.url]) {\r\n                    sortedRoutes_1[request.method][request.url] = {\r\n                        index: 0,\r\n                        responses: [],\r\n                    };\r\n                }\r\n                sortedRoutes_1[request.method][request.url].responses.push(request);\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        var createStubbedRoute = function (method, url) {\r\n            var _a = sortedRoutes_1[method][url], responses = _a.responses, index = _a.index;\r\n            cy.intercept({\r\n                url: url,\r\n                method: method,\r\n            }, function (req) {\r\n                var mockResponse = responses[index];\r\n                req.reply({\r\n                    fixture: \"\".concat(NETWORK_MOCKS_CACHE_FOLDER_NAME, \"/\").concat(mockResponse.cacheLookupKey, \".json\"),\r\n                    statusCode: mockResponse.status,\r\n                });\r\n                if (sortedRoutes_1[method][url].responses.length > index + 1) {\r\n                    sortedRoutes_1[method][url].index += 1;\r\n                }\r\n            });\r\n        };\r\n        // Stub all recorded routes\r\n        var startT = Date.now();\r\n        try {\r\n            for (var _f = __values(Object.keys(sortedRoutes_1)), _g = _f.next(); !_g.done; _g = _f.next()) {\r\n                var method = _g.value;\r\n                try {\r\n                    for (var _h = (e_3 = void 0, __values(Object.keys(sortedRoutes_1[method]))), _j = _h.next(); !_j.done; _j = _h.next()) {\r\n                        var url = _j.value;\r\n                        createStubbedRoute(method, url);\r\n                    }\r\n                }\r\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\r\n                    }\r\n                    finally { if (e_3) throw e_3.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        executeCyTask(Task.Debug, \"[Browser] intercepting networks took \".concat(Date.now() - startT, \" ms for test \\\"\").concat(testName, \"\\\"\"));\r\n    }\r\n    if (currentTest.type === 'test') {\r\n        if (shouldRunGivenFilePath(filePath)) {\r\n            var cyTestId_1 = getCypressTestId(filePath, currentTest);\r\n            var suiteTitles = [];\r\n            var testName_1 = getCypressTestUniqueName(currentTest, suiteTitles);\r\n            cyTasks.push(executeCyTask(Task.CreateRun, {\r\n                cyTestId: cyTestId_1,\r\n                runPayload: {\r\n                    // invocationDetails doesn't exist for retries\r\n                    testName: filePath,\r\n                    code: currentTest.body,\r\n                    retryNumber: currentTest._currentRetry,\r\n                    retries: currentTest._retries,\r\n                    name: testName_1,\r\n                    suiteTitles: suiteTitles,\r\n                    startedAt: currentTest.wallClockStartedAt,\r\n                    clientId: currentTest.id,\r\n                },\r\n            }).then(function () {\r\n                allCyTestIds.add(cyTestId_1);\r\n            }));\r\n        }\r\n    }\r\n    awaitCyTasks(cyTasks);\r\n}; };\r\nvar handleAfterEach = function (currentTest) { return function () {\r\n    var _a, _b;\r\n    var cyTasks = [];\r\n    var filePath = getFilePath();\r\n    var cyTestId = getCypressTestId(filePath, currentTest);\r\n    if (currentTest.type === 'test' && allCyTestIds.has(cyTestId)) {\r\n        var testName = getCypressTestUniqueName(currentTest);\r\n        cyTasks.push(executeCyTask(Task.RecordMocks, testName));\r\n        if (shouldUploadArtifacts(currentTest) &&\r\n            !uploadedToS3CyTestIds.has(cyTestId)) {\r\n            uploadedToS3CyTestIds.add(cyTestId);\r\n            // push an internal 'End of Test' log event\r\n            eventsHandler.push(createDeploySentinelEvent('log', {\r\n                beforeDomEventId: (_a = eventsHandler.getLastDomEvent()) === null || _a === void 0 ? void 0 : _a.id,\r\n                afterDomEventId: (_b = eventsHandler.getLastDomEvent()) === null || _b === void 0 ? void 0 : _b.id,\r\n                name: 'End of Test',\r\n                message: '',\r\n            }));\r\n            var artifacts_1 = stringifyAndPackArtifacts(eventsHandler.get(), logger, 'browser');\r\n            if (artifacts_1) {\r\n                // upload browser artifacts\r\n                // TODO: move this to after:run so debugger can catch other 'after' hook events\r\n                cyTasks.push(executeCyTask(Task.GetBrowserArtifactsPresignedUrl, cyTestId).then(function (presignedUrl) {\r\n                    if (presignedUrl) {\r\n                        // WARNING: resolve this in 'after' hook\r\n                        uploadToS3Promises.push(new Cypress.Promise(function (resolve) {\r\n                            // TODO: we can possibly remove this setTimeout since artifacts is stringified already\r\n                            maybeSetTimeout(function () {\r\n                                uploadToS3({\r\n                                    url: presignedUrl,\r\n                                    artifacts: artifacts_1,\r\n                                    logger: logger,\r\n                                }).finally(function () { return resolve(); });\r\n                            }, 0);\r\n                        }));\r\n                    }\r\n                    else {\r\n                        logger.warning({\r\n                            location: 'handleAfterEach',\r\n                            message: 'received nullish presignedUrl',\r\n                        });\r\n                    }\r\n                }));\r\n            }\r\n            else {\r\n                logger.error({\r\n                    location: 'handleAfterEach',\r\n                    message: new Error('failed to stringify and pack browser artifacts'),\r\n                });\r\n            }\r\n        }\r\n    }\r\n    awaitCyTasks(cyTasks);\r\n}; };\r\nvar handleAfter = function () { return function () {\r\n    awaitCyTasks(uploadToS3Promises, REQUEST_TIMEOUT);\r\n}; };\r\nvar handleTestAfterRun = function (currentTest) {\r\n    var filePath = getFilePath();\r\n    var cyTestId = getCypressTestId(filePath, currentTest);\r\n    if (currentTest.type === 'test') {\r\n        executeCyTask(Task.WriteMocksToFile, filePath);\r\n        executeCyTask(Task.StopCRI, null);\r\n        var clearLocalCache_1 = function () {\r\n            if (isOpenMode) {\r\n                clearAllLocalCache();\r\n                executeCyTask(Task.ClearTestLocalCache, cyTestId);\r\n            }\r\n        };\r\n        if (allCyTestIds.has(cyTestId)) {\r\n            executeCyTask(Task.CompleteRun, {\r\n                cyTestId: cyTestId,\r\n                runPayload: {\r\n                    completedAt: new Date(),\r\n                    took: currentTest.wallClockDuration,\r\n                    state: currentTest.state,\r\n                    errorTrace: currentTest.err\r\n                        ? {\r\n                            message: currentTest.err.message,\r\n                            name: currentTest.err.name,\r\n                            codeFrame: currentTest.err.codeFrame,\r\n                            stack: currentTest.err.stack,\r\n                            sourceMappedStack: currentTest.err.sourceMappedStack,\r\n                        }\r\n                        : {},\r\n                },\r\n            });\r\n            if (shouldUploadArtifacts(currentTest)) {\r\n                executeCyTask(Task.LogRunUrl, cyTestId);\r\n                executeCyTask(Task.UploadPluginArtifacts, cyTestId);\r\n            }\r\n            clearLocalCache_1();\r\n        }\r\n        else {\r\n            var suiteTitles = [];\r\n            var testName = getCypressTestUniqueName(currentTest, suiteTitles);\r\n            // test might crash within 'before' hook\r\n            executeCyTask(Task.CreateRun, {\r\n                cyTestId: cyTestId,\r\n                runPayload: {\r\n                    // invocationDetails doesn't exist for retries\r\n                    testName: filePath,\r\n                    code: currentTest.body,\r\n                    retryNumber: currentTest._currentRetry,\r\n                    took: currentTest.wallClockDuration,\r\n                    retries: currentTest._retries,\r\n                    name: testName,\r\n                    suiteTitles: suiteTitles,\r\n                    startedAt: currentTest.wallClockStartedAt,\r\n                    completedAt: new Date(),\r\n                    clientId: currentTest.id,\r\n                    state: currentTest.state,\r\n                    errorTrace: currentTest.err\r\n                        ? {\r\n                            message: currentTest.err.message,\r\n                            name: currentTest.err.name,\r\n                            codeFrame: currentTest.err.codeFrame,\r\n                            stack: currentTest.err.stack,\r\n                            sourceMappedStack: currentTest.err.sourceMappedStack,\r\n                        }\r\n                        : {},\r\n                },\r\n            }).then(function () {\r\n                allCyTestIds.add(cyTestId);\r\n                // need to upload browser artifacts since 'after' hook won't be called\r\n                if (shouldUploadArtifacts(currentTest)) {\r\n                    var artifacts = stringifyAndPackArtifacts(eventsHandler.get(), logger, 'browser');\r\n                    if (artifacts) {\r\n                        executeCyTask(Task.UploadBrowserArtifacts, {\r\n                            cyTestId: cyTestId,\r\n                            artifacts: artifacts,\r\n                        });\r\n                    }\r\n                    // execute tasks here to make sure the createRun promise is initialized\r\n                    executeCyTask(Task.LogRunUrl, cyTestId);\r\n                    executeCyTask(Task.UploadPluginArtifacts, cyTestId);\r\n                }\r\n                clearLocalCache_1();\r\n            });\r\n        }\r\n    }\r\n};\r\nvar injectRrweb = function (win) {\r\n    var _a, _b;\r\n    if (win.rrwebRecord) {\r\n        logger.info({\r\n            location: 'injectRrweb',\r\n            message: 'injectRrweb called when rrweb already exists on window',\r\n        });\r\n        return;\r\n    }\r\n    var script = win.document.createElement('script');\r\n    script.innerHTML = rr;\r\n    script.type = 'text/javascript';\r\n    win.document.head.appendChild(script);\r\n    curRrweb = win.rrwebRecord;\r\n    // FIXME: type rrwebRecord so its callable\r\n    (_b = (_a = win).rrwebRecord) === null || _b === void 0 ? void 0 : _b.call(_a, {\r\n        emit: function (event) {\r\n            var dsEvent = createDeploySentinelEvent('dom', event);\r\n            eventsHandler.push(dsEvent);\r\n        },\r\n    });\r\n};\r\nvar handleLogAdded = function (log) { return function () {\r\n    var _a, _b, _c, _d;\r\n    // from 'fail' and 'uncaught:exception'\r\n    if (((_b = (_a = log.err) === null || _a === void 0 ? void 0 : _a.message) === null || _b === void 0 ? void 0 : _b.includes('DeploySentinelTask')) ||\r\n        ((_c = log.message) === null || _c === void 0 ? void 0 : _c.includes('DeploySentinelTask'))) {\r\n        return;\r\n    }\r\n    // Need to wrap in \"attributes\" to match command.logs format\r\n    var beforeDomRrwebNodeIds = null;\r\n    wrapEventHandler({\r\n        event: 'log:added:highlightDom',\r\n        log: false,\r\n        handler: function () {\r\n            beforeDomRrwebNodeIds = getRrwebNodeIdsFromJquery(log.$el);\r\n        },\r\n    });\r\n    var dsEvent = createDeploySentinelEvent('log', __assign({ beforeDomEventId: (_d = eventsHandler.getLastDomEvent()) === null || _d === void 0 ? void 0 : _d.id, beforeDomRrwebNodeIds: beforeDomRrwebNodeIds, windowLocation: windowLocation }, formatLog(log)));\r\n    logEventLookupMap.set(log.id, dsEvent);\r\n    eventsHandler.push(dsEvent);\r\n    executeCyTask(Task.PushPluginEvent, {\r\n        type: dsEvent.type,\r\n        id: dsEvent.id,\r\n        data: {\r\n            name: dsEvent.data.name,\r\n        },\r\n        offset: dsEvent.offset,\r\n        ts: dsEvent.ts,\r\n    });\r\n}; };\r\nvar handleOnHookStarts = function (hook) { return function () {\r\n    var dsEvent = createDeploySentinelEvent('hook', {\r\n        // body: hook.body,\r\n        // duration: hook.duration,\r\n        // file: hook.file,\r\n        hookName: hook.hookName,\r\n        hookId: hook.hookId,\r\n        // errorTrace: hook.err\r\n        //   ? {\r\n        //       message: hook.err.message,\r\n        //       name: hook.err.name,\r\n        //       codeFrame: hook.err.codeFrame,\r\n        //       stack: hook.err.stack,\r\n        //       sourceMappedStack: hook.err.sourceMappedStack,\r\n        //     }\r\n        //   : {},\r\n    });\r\n    eventsHandler.push(dsEvent);\r\n}; };\r\nvar handleLogChanged = function (log) { return function () {\r\n    var _a;\r\n    var logEvent = logEventLookupMap.get(log.id);\r\n    if (logEvent !== undefined) {\r\n        var afterDomEventId = (_a = eventsHandler.getLastDomEvent()) === null || _a === void 0 ? void 0 : _a.id;\r\n        var afterDomRrwebNodeIds_1 = null;\r\n        wrapEventHandler({\r\n            event: 'log:changed:highlightDom',\r\n            log: false,\r\n            handler: function () {\r\n                afterDomRrwebNodeIds_1 = getRrwebNodeIdsFromJquery(log.$el);\r\n            },\r\n        });\r\n        logEvent.took = Math.round(performanceNow() - logEvent.offset);\r\n        logEvent.data = __assign({ beforeDomEventId: logEvent.data.beforeDomEventId, beforeDomRrwebNodeIds: logEvent.data.beforeDomRrwebNodeIds, afterDomEventId: afterDomEventId, afterDomRrwebNodeIds: afterDomRrwebNodeIds_1, windowLocation: logEvent.data.windowLocation }, formatLog(log));\r\n        eventsHandler.update(logEvent);\r\n    }\r\n}; };\r\nif (shouldAttachDebugger(apiKey)) {\r\n    Cypress.on('test:before:run:async', function (_, currentTest) {\r\n        wrapEventHandler({\r\n            event: 'test:before:run:async',\r\n            log: true,\r\n            handler: handleTestBeforeRun(currentTest),\r\n        });\r\n    });\r\n    Cypress.on('window:before:load', function (win) {\r\n        wrapEventHandler({\r\n            event: 'window:before:load',\r\n            log: true,\r\n            handler: handleWindowBeforeLoad(win),\r\n        });\r\n    });\r\n    // Multi-origin tests won't trigger a new before:load event, but will trigger a load event\r\n    // Without this, rrweb wont reinject properly after an origin navigation\r\n    Cypress.on('window:load', function (win) {\r\n        wrapEventHandler({\r\n            event: 'window:load',\r\n            log: true,\r\n            handler: handleWindowLoad(win),\r\n        });\r\n    });\r\n    before(function () {\r\n        wrapEventHandler({\r\n            event: 'before',\r\n            log: true,\r\n            handler: handlerBefore(),\r\n        });\r\n    });\r\n    beforeEach(function () {\r\n        wrapEventHandler({\r\n            event: 'beforeEach',\r\n            log: true,\r\n            handler: handlerBeforeEach(this.currentTest),\r\n        });\r\n    });\r\n    Cypress.on('url:changed', function (url) {\r\n        windowLocation = url;\r\n    });\r\n    Cypress.on('log:added', function (log) {\r\n        wrapEventHandler({\r\n            event: 'log:added',\r\n            log: false,\r\n            handler: handleLogAdded(log),\r\n        });\r\n    });\r\n    Cypress.on('log:changed', function (log) {\r\n        wrapEventHandler({\r\n            event: 'log:changed',\r\n            log: false,\r\n            handler: handleLogChanged(log),\r\n        });\r\n    });\r\n    afterEach(function () {\r\n        wrapEventHandler({\r\n            event: 'afterEach',\r\n            log: true,\r\n            handler: handleAfterEach(this.currentTest),\r\n        });\r\n    });\r\n    after(function () {\r\n        wrapEventHandler({\r\n            event: 'after',\r\n            log: true,\r\n            handler: handleAfter(),\r\n        });\r\n    });\r\n    // WARNING: attrs and Mocha.Test is not 1-1 mapping\r\n    Cypress.on('test:after:run', function (attrs, _) {\r\n        wrapEventHandler({\r\n            event: 'test:after:run',\r\n            log: true,\r\n            handler: function () {\r\n                var _a;\r\n                // TODO: the hacky way to retrieve 'parent' prop that is missing in 'attrs'\r\n                var currentTest = cypressTestCache.get(attrs.title, attrs.id, attrs.currentRetry);\r\n                handleTestAfterRun({\r\n                    id: attrs.id,\r\n                    type: attrs.type,\r\n                    body: attrs.body,\r\n                    _retries: attrs.retries,\r\n                    _currentRetry: attrs.currentRetry,\r\n                    title: attrs.title,\r\n                    wallClockStartedAt: attrs.wallClockStartedAt,\r\n                    wallClockDuration: attrs.wallClockDuration,\r\n                    state: attrs.state,\r\n                    err: attrs.err,\r\n                    invocationDetails: attrs.invocationDetails,\r\n                    // FIXME: so far, if currentTest doesnt exist, the parent\r\n                    // file path could be dropped.\r\n                    // Its still better than getting skipped\r\n                    // bugsnag ticket: https://app.bugsnag.com/deploysentinel/deploysentinel/errors/63da0ec00e87a50009c27b10?filters[event.since]=all&filters[app.type]=debugger&filters[search][]=from&filters[search][]=the&filters[search][]=cache\r\n                    parent: ((_a = currentTest === null || currentTest === void 0 ? void 0 : currentTest.parent) !== null && _a !== void 0 ? _a : {}),\r\n                });\r\n            },\r\n        });\r\n    });\r\n    Cypress.on('uncaught:exception', function (e, _runnable) {\r\n        // silence exceptions thrown by DeploySentinel tasks\r\n        if (some(Object.values(Task), function (task) { return e.message.includes(task); })) {\r\n            if (!e.message.includes(Task.SendMessage)) {\r\n                logger.error({\r\n                    location: 'uncaught:exceptions',\r\n                    message: e,\r\n                });\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n    // TODO -> decide if we need to track hook events (need to exclude debugger events)\r\n    var mochaRunner = Cypress.mocha.getRunner();\r\n    mochaRunner.on('hook', function (hook) {\r\n        wrapEventHandler({\r\n            event: 'mocha:hook',\r\n            log: false,\r\n            handler: handleOnHookStarts(hook),\r\n        });\r\n    });\r\n}\r\n//# sourceMappingURL=support.js.map","references":["/home/warren/Codes/deploysentinel/debugger/node_modules/cypress/types/bluebird/index.d.ts","/home/warren/Codes/deploysentinel/debugger/node_modules/@types/minimatch/index.d.ts","/home/warren/Codes/deploysentinel/debugger/node_modules/@types/lodash/some.d.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/config.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/clients/api.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/modules/rr.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/utils/browser.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/utils/shared.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/types.ts"],"map":"{\"version\":3,\"file\":\"support.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/support.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/warren/Codes/deploysentinel/debugger/packages/cypress/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/support.d.ts","writeByteOrderMark":false,"text":"export {};\r\n"}}
