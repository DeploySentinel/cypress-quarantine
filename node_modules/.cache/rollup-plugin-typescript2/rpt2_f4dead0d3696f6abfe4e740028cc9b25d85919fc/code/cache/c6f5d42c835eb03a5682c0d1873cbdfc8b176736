{"code":"import { __assign } from \"tslib\";\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport pick from 'lodash/pick';\r\nexport var getCypressTestUniqueName = function (cypressTest, titles, currentDepth) {\r\n    if (titles === void 0) { titles = null; }\r\n    if (currentDepth === void 0) { currentDepth = 0; }\r\n    if (!(cypressTest === null || cypressTest === void 0 ? void 0 : cypressTest.title) || currentDepth > 32) {\r\n        return '';\r\n    }\r\n    if (Array.isArray(titles)) {\r\n        titles.unshift(cypressTest.title);\r\n    }\r\n    var prefix = getCypressTestUniqueName(cypressTest.parent, titles, currentDepth + 1);\r\n    return prefix ? \"\".concat(prefix, \" \").concat(cypressTest.title) : cypressTest.title;\r\n};\r\n// should be unique across different specs\r\nexport var getCypressTestId = function (filePath, cyTest) {\r\n    var testName = getCypressTestUniqueName(cyTest);\r\n    return \"\".concat(filePath, \"@@\").concat(testName, \"$$\").concat(cyTest.id, \"::\").concat(cyTest._currentRetry);\r\n};\r\nexport var formatLog = function (log) {\r\n    var _a, _b;\r\n    // TODO: Use pick?\r\n    var alias = log.alias, id = log.id, name = log.name, // viewport, get, click, request, page load, form sub, etc.\r\n    message = log.message, event = log.event, // bool\r\n    ended = log.ended, // bool\r\n    state = log.state, // passed, pending\r\n    chainerId = log.chainerId, // string of the Cypress chain this action is\r\n    wallClockStartedAt = log.wallClockStartedAt, // ex. \"2022-04-24T21:28:17.213Z\"\r\n    type = log.type, // parent, child\r\n    err = log.err, // { message, name, codeFrame: { frame // code,  }}\r\n    // Hook\r\n    hookId = log.hookId, renderProps = log.renderProps, consoleProps = log.consoleProps, \r\n    // Get\r\n    numElements = log.numElements, // Number of elements matching get\r\n    highlightAttr = log.highlightAttr, // Usually \"data-cypress-el\"\r\n    // Network\r\n    displayName = log.displayName, // Network resource type (ex. script, xhr, fetch)\r\n    method = log.method, // GET, POST\r\n    url = log.url;\r\n    var shouldAttachYieldedProps = consoleProps.Command === 'wrap' || consoleProps.Command === 'request';\r\n    var shouldAttachRequestProps = consoleProps.Command === 'request';\r\n    return {\r\n        alias: alias,\r\n        id: id,\r\n        numElements: numElements,\r\n        highlightAttr: highlightAttr,\r\n        displayName: displayName,\r\n        chainerId: chainerId,\r\n        err: err,\r\n        type: type,\r\n        hookId: hookId,\r\n        wallClockStartedAt: wallClockStartedAt,\r\n        renderProps: {\r\n            indicator: renderProps.indicator,\r\n            message: renderProps.message,\r\n        },\r\n        consoleProps: __assign(__assign({}, (shouldAttachYieldedProps && { yielded: consoleProps.Yielded })), (shouldAttachRequestProps && { request: consoleProps.Request })),\r\n        // name:xhr and name:fetch method and url is stored in console props\r\n        method: (_a = consoleProps === null || consoleProps === void 0 ? void 0 : consoleProps.Method) !== null && _a !== void 0 ? _a : method,\r\n        url: (_b = consoleProps === null || consoleProps === void 0 ? void 0 : consoleProps.URL) !== null && _b !== void 0 ? _b : url,\r\n        name: name,\r\n        message: message,\r\n        event: event,\r\n        ended: ended,\r\n        state: state,\r\n    };\r\n};\r\nvar CypressTestCache = /** @class */ (function () {\r\n    function CypressTestCache(getFilePath) {\r\n        this.cache = new Map();\r\n        this.getFilePath = getFilePath;\r\n    }\r\n    CypressTestCache.prototype.getCacheKey = function (title, clientId, currentRetry) {\r\n        return \"\".concat(this.getFilePath(), \"@@\").concat(title, \"$$\").concat(clientId, \"::\").concat(currentRetry);\r\n    };\r\n    CypressTestCache.prototype.set = function (currentTest) {\r\n        var cacheKey = this.getCacheKey(currentTest.title, currentTest.id, currentTest._currentRetry);\r\n        // only need to set once for a particular key\r\n        if (!this.cache.has(cacheKey)) {\r\n            this.cache.set(cacheKey, \r\n            // only 'parent' prop is used\r\n            cloneDeep(pick(currentTest, ['parent'])));\r\n        }\r\n    };\r\n    CypressTestCache.prototype.get = function (title, clientId, currentRetry) {\r\n        return this.cache.get(this.getCacheKey(title, clientId, currentRetry));\r\n    };\r\n    return CypressTestCache;\r\n}());\r\nexport { CypressTestCache };\r\n//# sourceMappingURL=browser.js.map","references":["/home/warren/Codes/deploysentinel/debugger/node_modules/@types/lodash/cloneDeep.d.ts","/home/warren/Codes/deploysentinel/debugger/node_modules/@types/lodash/pick.d.ts","/home/warren/Codes/deploysentinel/debugger/packages/cypress/src/types.ts"],"map":"{\"version\":3,\"file\":\"browser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/browser.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/warren/Codes/deploysentinel/debugger/packages/cypress/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/utils/browser.d.ts","writeByteOrderMark":false,"text":"import type { CommandLog, CypressTest, CypressSuite } from '../types';\r\nexport declare const getCypressTestUniqueName: (cypressTest: CypressTest | CypressSuite, titles?: string[] | null, currentDepth?: number) => string;\r\nexport declare const getCypressTestId: (filePath: string, cyTest: CypressTest) => string;\r\nexport declare const formatLog: (log: CommandLog) => {\r\n    alias: string | undefined;\r\n    id: string;\r\n    numElements: number | undefined;\r\n    highlightAttr: string | undefined;\r\n    displayName: string;\r\n    chainerId: string;\r\n    err: import(\"../types\").CypressError | undefined;\r\n    type: string;\r\n    hookId: string;\r\n    wallClockStartedAt: Date;\r\n    renderProps: {\r\n        indicator: string | undefined;\r\n        message: string | undefined;\r\n    };\r\n    consoleProps: {\r\n        request?: {\r\n            'Request Body'?: unknown;\r\n            'Request Headers': Record<string, string>;\r\n            'Request URL': string;\r\n            'Response Body'?: string | undefined;\r\n            'Response Headers'?: Record<string, string> | undefined;\r\n            'Response Status'?: number | undefined;\r\n        } | undefined;\r\n        yielded?: unknown;\r\n    };\r\n    method: string;\r\n    url: string;\r\n    name: string;\r\n    message: string;\r\n    event: boolean;\r\n    ended: boolean;\r\n    state: \"passed\" | \"failed\" | \"pending\";\r\n};\r\nexport declare class CypressTestCache {\r\n    private readonly cache;\r\n    private readonly getFilePath;\r\n    private getCacheKey;\r\n    constructor(getFilePath: () => string);\r\n    set(currentTest: CypressTest): void;\r\n    get(title: string, clientId: string, currentRetry: number): Partial<CypressTest> | undefined;\r\n}\r\n"}}
