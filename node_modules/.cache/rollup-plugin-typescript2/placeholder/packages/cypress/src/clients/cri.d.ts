import type { Protocol } from 'devtools-protocol/types/protocol';
import { DSEvent, DebuggerOptions } from '../types';
import { Logger } from './api';
export declare const checkShouldBypass: (url: string) => boolean;
export default class CRIClient {
    private readonly debuggerOptions?;
    private readonly rdp;
    private readonly logger;
    private client;
    private eventsHandler;
    private networkRequestEventMap;
    private networkRequestExtraInfo;
    private networkResponseExtraInfo;
    private shouldFilterNetworkEvent;
    private formatNetworkRequest;
    private formatNetworkResponse;
    constructor(rdp: number, logger: Logger, debuggerOptions?: DebuggerOptions);
    getEvents(): DSEvent[];
    getNetworkTimings: () => {
        [url: string]: number[];
    };
    pushEvent(event: DSEvent): void;
    clearEvents(): void;
    clearLocalCache(): void;
    getPerformanceMetrics(): Promise<Protocol.Performance.GetMetricsResponse> | null;
    disconnect(): Promise<void> | undefined;
    connect: () => Promise<void>;
}
