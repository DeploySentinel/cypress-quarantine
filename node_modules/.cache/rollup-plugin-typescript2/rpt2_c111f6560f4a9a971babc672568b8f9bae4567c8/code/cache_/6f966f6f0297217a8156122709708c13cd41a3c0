{"code":"// Clone from https://github.com/cypress-io/cypress/blob/v10.0.0/packages/server/lib/util/ci_provider.js\r\nimport _ from 'lodash';\r\nimport { sha1 } from '../utils/node';\r\nvar join = function (char) {\r\n    var pieces = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        pieces[_i - 1] = arguments[_i];\r\n    }\r\n    return _.chain(pieces).compact().join(char).value();\r\n};\r\nvar toCamelObject = function (obj, key) {\r\n    return _.set(obj, _.camelCase(key), process.env[key]);\r\n};\r\nexport var extract = function (envKeys) {\r\n    return _.transform(envKeys, toCamelObject, {});\r\n};\r\n/**\r\n * Returns true if running on TeamFoundation server.\r\n * @see https://technet.microsoft.com/en-us/hh850448(v=vs.92)\r\n */\r\nvar isTeamFoundation = function () {\r\n    return process.env.TF_BUILD && process.env.TF_BUILD_BUILDNUMBER;\r\n};\r\n/**\r\n * Returns true if running on Azure CI pipeline.\r\n * See environment variables in the issue #3657\r\n * @see https://github.com/cypress-io/cypress/issues/3657\r\n */\r\nvar isAzureCi = function () {\r\n    return process.env.TF_BUILD && process.env.AZURE_HTTP_USER_AGENT;\r\n};\r\nexport var isAWSCodeBuild = function () {\r\n    return _.some(process.env, function (_val, key) {\r\n        return /^CODEBUILD_/.test(key);\r\n    });\r\n};\r\nvar isBamboo = function () {\r\n    return process.env.bamboo_buildNumber;\r\n};\r\nvar isCodeshipBasic = function () {\r\n    return (process.env.CI_NAME &&\r\n        process.env.CI_NAME === 'codeship' &&\r\n        process.env.CODESHIP);\r\n};\r\nvar isCodeshipPro = function () {\r\n    return (process.env.CI_NAME &&\r\n        process.env.CI_NAME === 'codeship' &&\r\n        !process.env.CODESHIP);\r\n};\r\nvar isConcourse = function () {\r\n    return _.some(process.env, function (_val, key) {\r\n        return /^CONCOURSE_/.test(key);\r\n    });\r\n};\r\nvar isGitlab = function () {\r\n    return (process.env.GITLAB_CI ||\r\n        (process.env.CI_SERVER_NAME && /^GitLab/.test(process.env.CI_SERVER_NAME)));\r\n};\r\nvar isGoogleCloud = function () {\r\n    // set automatically for the Node.js 6, Node.js 8 runtimes (not in Node 10)\r\n    // TODO: may also potentially have X_GOOGLE_* env var set\r\n    // https://cloud.google.com/functions/docs/env-var#environment_variables_set_automatically\r\n    return (process.env.GCP_PROJECT ||\r\n        process.env.GCLOUD_PROJECT ||\r\n        process.env.GOOGLE_CLOUD_PROJECT);\r\n};\r\nexport var isJenkins = function () {\r\n    return (process.env.JENKINS_URL ||\r\n        process.env.JENKINS_HOME ||\r\n        process.env.JENKINS_VERSION ||\r\n        process.env.HUDSON_URL ||\r\n        process.env.HUDSON_HOME);\r\n};\r\nvar isWercker = function () {\r\n    return process.env.WERCKER || process.env.WERCKER_MAIN_PIPELINE_STARTED;\r\n};\r\n/**\r\n * We detect CI providers by detecting an environment variable\r\n * unique to the provider, or by calling a function that returns true\r\n * for that provider.\r\n *\r\n * For example, AppVeyor CI has environment the\r\n * variable \"APPVEYOR\" set during run\r\n */\r\nvar CI_PROVIDERS = {\r\n    appveyor: 'APPVEYOR',\r\n    azure: isAzureCi,\r\n    awsCodeBuild: isAWSCodeBuild,\r\n    bamboo: isBamboo,\r\n    bitbucket: 'BITBUCKET_BUILD_NUMBER',\r\n    buildkite: 'BUILDKITE',\r\n    circle: 'CIRCLECI',\r\n    codeshipBasic: isCodeshipBasic,\r\n    codeshipPro: isCodeshipPro,\r\n    concourse: isConcourse,\r\n    codeFresh: 'CF_BUILD_ID',\r\n    drone: 'DRONE',\r\n    githubActions: 'GITHUB_ACTIONS',\r\n    gitlab: isGitlab,\r\n    goCD: 'GO_JOB_NAME',\r\n    googleCloud: isGoogleCloud,\r\n    jenkins: isJenkins,\r\n    semaphore: 'SEMAPHORE',\r\n    shippable: 'SHIPPABLE',\r\n    teamcity: 'TEAMCITY_VERSION',\r\n    teamfoundation: isTeamFoundation,\r\n    travis: 'TRAVIS',\r\n    wercker: isWercker,\r\n    netlify: 'NETLIFY',\r\n    layerci: 'LAYERCI',\r\n};\r\nvar _detectProviderName = function () {\r\n    var env = process.env;\r\n    // return the key of the first provider\r\n    // which is truthy\r\n    return _.findKey(CI_PROVIDERS, function (value) {\r\n        if (_.isString(value)) {\r\n            return env[value];\r\n        }\r\n        if (_.isFunction(value)) {\r\n            return value();\r\n        }\r\n    });\r\n};\r\n// TODO: don't forget about buildNumber!\r\n// look at the old commit that was removed to see how we did it\r\nvar _providerCiParams = function () {\r\n    return {\r\n        appveyor: extract([\r\n            'APPVEYOR_JOB_ID',\r\n            'APPVEYOR_ACCOUNT_NAME',\r\n            'APPVEYOR_PROJECT_SLUG',\r\n            'APPVEYOR_BUILD_NUMBER',\r\n            'APPVEYOR_BUILD_VERSION',\r\n            'APPVEYOR_PULL_REQUEST_NUMBER',\r\n            'APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH',\r\n        ]),\r\n        azure: extract([\r\n            'BUILD_BUILDID',\r\n            'BUILD_BUILDNUMBER',\r\n            'BUILD_CONTAINERID',\r\n            'BUILD_REPOSITORY_URI',\r\n        ]),\r\n        awsCodeBuild: extract([\r\n            'CODEBUILD_BUILD_ID',\r\n            'CODEBUILD_BUILD_NUMBER',\r\n            'CODEBUILD_RESOLVED_SOURCE_VERSION',\r\n            'CODEBUILD_SOURCE_REPO_URL',\r\n            'CODEBUILD_SOURCE_VERSION',\r\n        ]),\r\n        bamboo: extract([\r\n            'bamboo_buildNumber',\r\n            'bamboo_buildResultsUrl',\r\n            'bamboo_planRepository_repositoryUrl',\r\n            'bamboo_buildKey',\r\n        ]),\r\n        bitbucket: extract([\r\n            'BITBUCKET_REPO_SLUG',\r\n            'BITBUCKET_REPO_OWNER',\r\n            'BITBUCKET_BUILD_NUMBER',\r\n            'BITBUCKET_PARALLEL_STEP',\r\n            'BITBUCKET_STEP_RUN_NUMBER',\r\n            // the PR variables are only set on pull request builds\r\n            'BITBUCKET_PR_ID',\r\n            'BITBUCKET_PR_DESTINATION_BRANCH',\r\n            'BITBUCKET_PR_DESTINATION_COMMIT',\r\n        ]),\r\n        buildkite: extract([\r\n            'BUILDKITE_REPO',\r\n            'BUILDKITE_SOURCE',\r\n            'BUILDKITE_JOB_ID',\r\n            'BUILDKITE_BUILD_ID',\r\n            'BUILDKITE_BUILD_URL',\r\n            'BUILDKITE_BUILD_NUMBER',\r\n            'BUILDKITE_PULL_REQUEST',\r\n            'BUILDKITE_PULL_REQUEST_REPO',\r\n            'BUILDKITE_PULL_REQUEST_BASE_BRANCH',\r\n        ]),\r\n        circle: extract([\r\n            'CIRCLE_JOB',\r\n            'CIRCLE_BUILD_NUM',\r\n            'CIRCLE_BUILD_URL',\r\n            'CIRCLE_PR_NUMBER',\r\n            'CIRCLE_PR_REPONAME',\r\n            'CIRCLE_PR_USERNAME',\r\n            'CIRCLE_COMPARE_URL',\r\n            'CIRCLE_WORKFLOW_ID',\r\n            'CIRCLE_PULL_REQUEST',\r\n            'CIRCLE_REPOSITORY_URL',\r\n            'CI_PULL_REQUEST',\r\n        ]),\r\n        codeshipBasic: extract([\r\n            'CI_BUILD_ID',\r\n            'CI_REPO_NAME',\r\n            'CI_BUILD_URL',\r\n            'CI_PROJECT_ID',\r\n            'CI_BUILD_NUMBER',\r\n            'CI_PULL_REQUEST',\r\n        ]),\r\n        // CodeshipPro provides very few CI variables\r\n        // https://documentation.codeship.com/pro/builds-and-configuration/environment-variables/\r\n        codeshipPro: extract(['CI_BUILD_ID', 'CI_REPO_NAME', 'CI_PROJECT_ID']),\r\n        // https://concourse-ci.org/implementing-resource-types.html#resource-metadata\r\n        concourse: extract([\r\n            'BUILD_ID',\r\n            'BUILD_NAME',\r\n            'BUILD_JOB_NAME',\r\n            'BUILD_PIPELINE_NAME',\r\n            'BUILD_TEAM_NAME',\r\n            'ATC_EXTERNAL_URL',\r\n        ]),\r\n        // https://codefresh.io/docs/docs/codefresh-yaml/variables/\r\n        codeFresh: extract([\r\n            'CF_BUILD_ID',\r\n            'CF_BUILD_URL',\r\n            'CF_CURRENT_ATTEMPT',\r\n            'CF_STEP_NAME',\r\n            'CF_PIPELINE_NAME',\r\n            'CF_PIPELINE_TRIGGER_ID',\r\n            // variables added for pull requests\r\n            'CF_PULL_REQUEST_ID',\r\n            'CF_PULL_REQUEST_IS_FORK',\r\n            'CF_PULL_REQUEST_NUMBER',\r\n            'CF_PULL_REQUEST_TARGET',\r\n        ]),\r\n        drone: extract([\r\n            'DRONE_JOB_NUMBER',\r\n            'DRONE_BUILD_LINK',\r\n            'DRONE_BUILD_NUMBER',\r\n            'DRONE_PULL_REQUEST',\r\n        ]),\r\n        // https://help.github.com/en/actions/automating-your-workflow-with-github-actions/using-environment-variables#default-environment-variables\r\n        githubActions: extract([\r\n            'GITHUB_ACTION',\r\n            'GITHUB_EVENT_NAME',\r\n            'GITHUB_JOB',\r\n            'GITHUB_REPOSITORY',\r\n            'GITHUB_RUN_ATTEMPT',\r\n            'GITHUB_RUN_ID',\r\n            'GITHUB_WORKFLOW',\r\n        ]),\r\n        // see https://docs.gitlab.com/ee/ci/variables/\r\n        gitlab: extract([\r\n            // pipeline is common among all jobs\r\n            'CI_PIPELINE_ID',\r\n            'CI_PIPELINE_URL',\r\n            // individual jobs\r\n            'CI_BUILD_ID',\r\n            'CI_JOB_ID',\r\n            'CI_JOB_URL',\r\n            'CI_JOB_NAME',\r\n            // other information\r\n            'GITLAB_HOST',\r\n            'CI_PROJECT_ID',\r\n            'CI_PROJECT_URL',\r\n            'CI_REPOSITORY_URL',\r\n            'CI_ENVIRONMENT_URL',\r\n            'CI_DEFAULT_BRANCH',\r\n            // for PRs: https://gitlab.com/gitlab-org/gitlab-ce/issues/23902\r\n        ]),\r\n        // https://docs.gocd.org/current/faq/dev_use_current_revision_in_build.html#standard-gocd-environment-variables\r\n        goCD: extract([\r\n            'GO_SERVER_URL',\r\n            'GO_ENVIRONMENT_NAME',\r\n            'GO_PIPELINE_NAME',\r\n            'GO_PIPELINE_COUNTER',\r\n            'GO_PIPELINE_LABEL',\r\n            'GO_STAGE_NAME',\r\n            'GO_STAGE_COUNTER',\r\n            'GO_JOB_NAME',\r\n            'GO_TRIGGER_USER',\r\n            'GO_REVISION',\r\n            'GO_TO_REVISION',\r\n            'GO_FROM_REVISION',\r\n            'GO_MATERIAL_HAS_CHANGED',\r\n        ]),\r\n        googleCloud: extract([\r\n            // individual jobs\r\n            'BUILD_ID',\r\n            'PROJECT_ID',\r\n            // other information\r\n            'REPO_NAME',\r\n            'BRANCH_NAME',\r\n            'TAG_NAME',\r\n            'COMMIT_SHA',\r\n            'SHORT_SHA',\r\n            // https://cloud.google.com/cloud-build/docs/api/reference/rest/Shared.Types/Build\r\n        ]),\r\n        jenkins: extract([\r\n            'BUILD_ID',\r\n            'BUILD_URL',\r\n            'BUILD_TAG',\r\n            'BUILD_NUMBER',\r\n            'ghprbPullId',\r\n        ]),\r\n        // https://semaphoreci.com/docs/available-environment-variables.html\r\n        // some come from v1, some from v2 of semaphore\r\n        semaphore: extract([\r\n            'SEMAPHORE_BRANCH_ID',\r\n            'SEMAPHORE_BUILD_NUMBER',\r\n            'SEMAPHORE_CURRENT_JOB',\r\n            'SEMAPHORE_CURRENT_THREAD',\r\n            'SEMAPHORE_EXECUTABLE_UUID',\r\n            'SEMAPHORE_GIT_BRANCH',\r\n            'SEMAPHORE_GIT_DIR',\r\n            'SEMAPHORE_GIT_REF',\r\n            'SEMAPHORE_GIT_REF_TYPE',\r\n            'SEMAPHORE_GIT_REPO_SLUG',\r\n            'SEMAPHORE_GIT_SHA',\r\n            'SEMAPHORE_GIT_URL',\r\n            'SEMAPHORE_JOB_COUNT',\r\n            'SEMAPHORE_JOB_ID',\r\n            'SEMAPHORE_JOB_NAME',\r\n            'SEMAPHORE_JOB_UUID',\r\n            'SEMAPHORE_PIPELINE_ID',\r\n            'SEMAPHORE_PLATFORM',\r\n            'SEMAPHORE_PROJECT_DIR',\r\n            'SEMAPHORE_PROJECT_HASH_ID',\r\n            'SEMAPHORE_PROJECT_ID',\r\n            'SEMAPHORE_PROJECT_NAME',\r\n            'SEMAPHORE_PROJECT_UUID',\r\n            'SEMAPHORE_REPO_SLUG',\r\n            'SEMAPHORE_TRIGGER_SOURCE',\r\n            'SEMAPHORE_WORKFLOW_ID',\r\n            'PULL_REQUEST_NUMBER', // pull requests from forks ONLY\r\n        ]),\r\n        // see http://docs.shippable.com/ci/env-vars/\r\n        shippable: extract([\r\n            // build variables\r\n            'SHIPPABLE_BUILD_ID',\r\n            'SHIPPABLE_BUILD_NUMBER',\r\n            'SHIPPABLE_COMMIT_RANGE',\r\n            'SHIPPABLE_CONTAINER_NAME',\r\n            'SHIPPABLE_JOB_ID',\r\n            'SHIPPABLE_JOB_NUMBER',\r\n            'SHIPPABLE_REPO_SLUG',\r\n            // additional information that Shippable provides\r\n            'IS_FORK',\r\n            'IS_GIT_TAG',\r\n            'IS_PRERELEASE',\r\n            'IS_RELEASE',\r\n            'REPOSITORY_URL',\r\n            'REPO_FULL_NAME',\r\n            'REPO_NAME',\r\n            'BUILD_URL',\r\n            // Pull request information\r\n            'BASE_BRANCH',\r\n            'HEAD_BRANCH',\r\n            'IS_PULL_REQUEST',\r\n            'PULL_REQUEST',\r\n            'PULL_REQUEST_BASE_BRANCH',\r\n            'PULL_REQUEST_REPO_FULL_NAME', // Full name of the repository from where the pull request originated.\r\n        ]),\r\n        teamcity: null,\r\n        teamfoundation: extract([\r\n            'BUILD_BUILDID',\r\n            'BUILD_BUILDNUMBER',\r\n            'BUILD_CONTAINERID',\r\n        ]),\r\n        travis: extract([\r\n            'TRAVIS_JOB_ID',\r\n            'TRAVIS_BUILD_ID',\r\n            'TRAVIS_BUILD_WEB_URL',\r\n            'TRAVIS_REPO_SLUG',\r\n            'TRAVIS_JOB_NUMBER',\r\n            'TRAVIS_EVENT_TYPE',\r\n            'TRAVIS_COMMIT_RANGE',\r\n            'TRAVIS_BUILD_NUMBER',\r\n            'TRAVIS_PULL_REQUEST',\r\n            'TRAVIS_PULL_REQUEST_BRANCH',\r\n            'TRAVIS_PULL_REQUEST_SHA',\r\n        ]),\r\n        wercker: null,\r\n        // https://docs.netlify.com/configure-builds/environment-variables/#deploy-urls-and-metadata\r\n        netlify: extract([\r\n            'BUILD_ID',\r\n            'CONTEXT',\r\n            'URL',\r\n            'DEPLOY_URL',\r\n            'DEPLOY_PRIME_URL',\r\n            'DEPLOY_ID',\r\n        ]),\r\n        // https://layerci.com/docs/layerfile-reference/build-env\r\n        layerci: extract([\r\n            'LAYERCI_JOB_ID',\r\n            'LAYERCI_RUNNER_ID',\r\n            'RETRY_INDEX',\r\n            'LAYERCI_PULL_REQUEST',\r\n            'LAYERCI_REPO_NAME',\r\n            'LAYERCI_REPO_OWNER',\r\n            'LAYERCI_BRANCH',\r\n            'GIT_TAG', // short hex for commits\r\n        ]),\r\n    };\r\n};\r\n// tries to grab commit information from CI environment variables\r\n// very useful to fill missing information when Git cannot grab correct values\r\nvar _providerCommitParams = function () {\r\n    var env = process.env;\r\n    return {\r\n        appveyor: {\r\n            sha: env.APPVEYOR_REPO_COMMIT,\r\n            // since APPVEYOR_REPO_BRANCH will be the target branch on a PR\r\n            // we need to use PULL_REQUEST_HEAD_REPO_BRANCH if it exists.\r\n            // e.g. if you have a PR: develop <- my-feature-branch\r\n            // my-feature-branch is APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH\r\n            // develop           is APPVEYOR_REPO_BRANCH\r\n            branch: env.APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH || env.APPVEYOR_REPO_BRANCH,\r\n            message: join('\\n', env.APPVEYOR_REPO_COMMIT_MESSAGE, env.APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED),\r\n            authorName: env.APPVEYOR_REPO_COMMIT_AUTHOR,\r\n            authorEmail: env.APPVEYOR_REPO_COMMIT_AUTHOR_EMAIL,\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        awsCodeBuild: {\r\n            sha: env.CODEBUILD_RESOLVED_SOURCE_VERSION,\r\n            // branch: ???,\r\n            // message: ???\r\n            // authorName: ???\r\n            // authorEmail: ???\r\n            remoteOrigin: env.CODEBUILD_SOURCE_REPO_URL,\r\n            // defaultBranch: ???\r\n        },\r\n        azure: {\r\n            sha: env.BUILD_SOURCEVERSION,\r\n            branch: env.BUILD_SOURCEBRANCHNAME,\r\n            message: env.BUILD_SOURCEVERSIONMESSAGE,\r\n            authorName: env.BUILD_SOURCEVERSIONAUTHOR,\r\n            authorEmail: env.BUILD_REQUESTEDFOREMAIL,\r\n        },\r\n        bamboo: {\r\n            sha: env.bamboo_planRepository_revision,\r\n            branch: env.bamboo_planRepository_branch,\r\n            // message: ???\r\n            authorName: env.bamboo_planRepository_username,\r\n            // authorEmail: ???\r\n            remoteOrigin: env.bamboo_planRepository_repositoryURL,\r\n            // defaultBranch: ???\r\n        },\r\n        bitbucket: {\r\n            sha: env.BITBUCKET_COMMIT,\r\n            branch: env.BITBUCKET_BRANCH,\r\n            // message: ???\r\n            // authorName: ???\r\n            // authorEmail: ???\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        buildkite: {\r\n            sha: env.BUILDKITE_COMMIT,\r\n            branch: env.BUILDKITE_BRANCH,\r\n            message: env.BUILDKITE_MESSAGE,\r\n            authorName: env.BUILDKITE_BUILD_CREATOR,\r\n            authorEmail: env.BUILDKITE_BUILD_CREATOR_EMAIL,\r\n            remoteOrigin: env.BUILDKITE_REPO,\r\n            defaultBranch: env.BUILDKITE_PIPELINE_DEFAULT_BRANCH,\r\n        },\r\n        circle: {\r\n            sha: env.CIRCLE_SHA1,\r\n            branch: env.CIRCLE_BRANCH,\r\n            // message: ???\r\n            authorName: env.CIRCLE_USERNAME,\r\n            // authorEmail: ???\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        codeshipBasic: {\r\n            sha: env.CI_COMMIT_ID,\r\n            branch: env.CI_BRANCH,\r\n            message: env.CI_COMMIT_MESSAGE,\r\n            authorName: env.CI_COMMITTER_NAME,\r\n            authorEmail: env.CI_COMMITTER_EMAIL,\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        codeshipPro: {\r\n            sha: env.CI_COMMIT_ID,\r\n            branch: env.CI_BRANCH,\r\n            message: env.CI_COMMIT_MESSAGE,\r\n            authorName: env.CI_COMMITTER_NAME,\r\n            authorEmail: env.CI_COMMITTER_EMAIL,\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        codeFresh: {\r\n            sha: env.CF_REVISION,\r\n            branch: env.CF_BRANCH,\r\n            message: env.CF_COMMIT_MESSAGE,\r\n            authorName: env.CF_COMMIT_AUTHOR,\r\n        },\r\n        drone: {\r\n            sha: env.DRONE_COMMIT_SHA,\r\n            // https://docs.drone.io/pipeline/environment/reference/drone-source-branch/\r\n            branch: env.DRONE_SOURCE_BRANCH,\r\n            message: env.DRONE_COMMIT_MESSAGE,\r\n            authorName: env.DRONE_COMMIT_AUTHOR,\r\n            authorEmail: env.DRONE_COMMIT_AUTHOR_EMAIL,\r\n            remoteOrigin: env.DRONE_GIT_HTTP_URL,\r\n            defaultBranch: env.DRONE_REPO_BRANCH,\r\n        },\r\n        githubActions: {\r\n            sha: env.GITHUB_SHA,\r\n            branch: env.GH_BRANCH || env.GITHUB_REF,\r\n            defaultBranch: env.GITHUB_BASE_REF,\r\n            remoteBranch: env.GITHUB_HEAD_REF,\r\n        },\r\n        gitlab: {\r\n            sha: env.CI_COMMIT_SHA,\r\n            branch: env.CI_COMMIT_REF_NAME,\r\n            message: env.CI_COMMIT_MESSAGE,\r\n            authorName: env.GITLAB_USER_NAME,\r\n            authorEmail: env.GITLAB_USER_EMAIL,\r\n            remoteOrigin: env.CI_REPOSITORY_URL,\r\n            defaultBranch: env.CI_DEFAULT_BRANCH,\r\n        },\r\n        googleCloud: {\r\n            sha: env.COMMIT_SHA,\r\n            branch: env.BRANCH_NAME,\r\n            // message: ??\r\n            // authorName: ??\r\n            // authorEmail: ??\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ??\r\n        },\r\n        jenkins: {\r\n            sha: env.GIT_COMMIT,\r\n            branch: env.GIT_BRANCH,\r\n            // message: ???\r\n            // authorName: ???\r\n            // authorEmail: ???\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        // Only from forks? https://semaphoreci.com/docs/available-environment-variables.html\r\n        semaphore: {\r\n            sha: env.SEMAPHORE_GIT_SHA,\r\n            branch: env.SEMAPHORE_GIT_BRANCH,\r\n            // message: ???\r\n            // authorName: ???\r\n            // authorEmail: ???\r\n            remoteOrigin: env.SEMAPHORE_GIT_REPO_SLUG,\r\n            // defaultBranch: ???\r\n        },\r\n        shippable: {\r\n            sha: env.COMMIT,\r\n            branch: env.BRANCH,\r\n            message: env.COMMIT_MESSAGE,\r\n            authorName: env.COMMITTER,\r\n            // authorEmail: ???\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        snap: null,\r\n        teamcity: null,\r\n        teamfoundation: {\r\n            sha: env.BUILD_SOURCEVERSION,\r\n            branch: env.BUILD_SOURCEBRANCHNAME,\r\n            message: env.BUILD_SOURCEVERSIONMESSAGE,\r\n            authorName: env.BUILD_SOURCEVERSIONAUTHOR,\r\n        },\r\n        travis: {\r\n            sha: env.TRAVIS_PULL_REQUEST_SHA || env.TRAVIS_COMMIT,\r\n            // for PRs, TRAVIS_BRANCH is the base branch being merged into\r\n            branch: env.TRAVIS_PULL_REQUEST_BRANCH || env.TRAVIS_BRANCH,\r\n            // authorName: ???\r\n            // authorEmail: ???\r\n            message: env.TRAVIS_COMMIT_MESSAGE,\r\n            // remoteOrigin: ???\r\n            // defaultBranch: ???\r\n        },\r\n        wercker: null,\r\n        netlify: {\r\n            sha: env.COMMIT_REF,\r\n            branch: env.BRANCH,\r\n            remoteOrigin: env.REPOSITORY_URL,\r\n        },\r\n        layerci: {\r\n            sha: env.GIT_COMMIT,\r\n            branch: env.LAYERCI_BRANCH,\r\n            message: env.GIT_COMMIT_TITLE,\r\n        },\r\n    };\r\n};\r\nexport var provider = function () {\r\n    return _detectProviderName() || null;\r\n};\r\nvar omitUndefined = function (ret) {\r\n    if (_.isObject(ret)) {\r\n        return _.omitBy(ret, _.isUndefined);\r\n    }\r\n};\r\nvar _get = function (fn) {\r\n    return _.chain(fn())\r\n        .get(provider()) // FIXME: wrong type ?\r\n        .thru(omitUndefined)\r\n        .defaultTo(null)\r\n        .value();\r\n};\r\nexport var ciParams = function () {\r\n    return _get(_providerCiParams);\r\n};\r\nexport var getCIBuildId = function () {\r\n    var params = ciParams();\r\n    var ciBuildId = null;\r\n    if (_.isPlainObject(params)) {\r\n        var keys = Object.keys(params)\r\n            .map(function (p) { return _.camelCase(p); })\r\n            .sort();\r\n        ciBuildId = keys\r\n            .map(function (k) { return params[k]; })\r\n            .filter(function (p) { return !_.isEmpty(p); })\r\n            .join('-');\r\n    }\r\n    return ciBuildId ? sha1(ciBuildId) : null;\r\n};\r\nexport var commitParams = function () {\r\n    return _get(_providerCommitParams);\r\n};\r\n// TODO: type return data\r\nexport var commitDefaults = function (existingInfo) {\r\n    var commitParamsObj = commitParams();\r\n    if (!commitParamsObj) {\r\n        commitParamsObj = {};\r\n    }\r\n    // based on the existingInfo properties\r\n    // merge in the commitParams if null or undefined\r\n    // defaulting back to null if all fails\r\n    // NOTE: only properties defined in \"existingInfo\" will be returned\r\n    var combined = _.transform(existingInfo, function (memo, value, key) {\r\n        return (memo[key] = _.defaultTo(value || commitParamsObj[key], null));\r\n    });\r\n    return combined;\r\n};\r\nexport var list = function () {\r\n    return _.keys(CI_PROVIDERS);\r\n};\r\n// grab all detectable providers\r\n// that we can extract ciBuildId from\r\nexport var detectableCiBuildIdProviders = function () {\r\n    return _.chain(_providerCiParams()).omitBy(_.isNull).keys().value();\r\n};\r\n//# sourceMappingURL=ci_providers.js.map","references":["/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/@types/lodash/index.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/types.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/utils/node.ts"],"map":"{\"version\":3,\"file\":\"ci_providers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modules/ci_providers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/modules/ci_providers.d.ts","writeByteOrderMark":false,"text":"import _ from 'lodash';\r\nimport type { CommitInfo } from '../types';\r\nexport declare const extract: (envKeys: string[]) => {};\r\nexport declare const isAWSCodeBuild: () => boolean;\r\nexport declare const isJenkins: () => string | undefined;\r\nexport declare const provider: () => string | null;\r\nexport declare const ciParams: () => _.Dictionary<any>;\r\nexport declare const getCIBuildId: () => string | null;\r\nexport declare const commitParams: () => _.Dictionary<any>;\r\nexport declare const commitDefaults: (existingInfo: CommitInfo) => any;\r\nexport declare const list: () => string[];\r\nexport declare const detectableCiBuildIdProviders: () => string[];\r\n"}}
