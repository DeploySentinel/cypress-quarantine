{"code":"import { __assign, __awaiter, __generator, __values } from \"tslib\";\r\nimport CDP from 'chrome-remote-interface';\r\nimport _ from 'lodash';\r\nimport minimatch from 'minimatch';\r\nimport { EventsHandler, createDeploySentinelEvent, validators, } from '../utils/shared';\r\n// https://chromedevtools.github.io/devtools-protocol/tot/Network/#type-ResourceType\r\nvar IGNORED_NETWORK_RESOURCE_TYPES = ['Media', 'Font', 'Image', 'Script'];\r\nvar INTERNAL_NETWORK_REQUEST_URL_PATTERNS = [\r\n    // s3 signed endpoints\r\n    'https://deploysentinel-dev.s3-accelerate.amazonaws.com/**',\r\n    'https://deploysentinel.s3-accelerate.amazonaws.com/**',\r\n    // api\r\n    'https://api.deploysentinel.com/**',\r\n];\r\nexport var checkShouldBypass = function (url) {\r\n    return _.some(INTERNAL_NETWORK_REQUEST_URL_PATTERNS, function (pattern) {\r\n        return minimatch(url, pattern);\r\n    });\r\n};\r\nvar CRIClient = /** @class */ (function () {\r\n    function CRIClient(rdp, logger, debuggerOptions) {\r\n        var _this = this;\r\n        this.networkRequestEventMap = new Map();\r\n        this.networkRequestExtraInfo = new Map();\r\n        this.networkResponseExtraInfo = new Map();\r\n        this.getNetworkTimings = function () {\r\n            var e_1, _a;\r\n            var events = _this.eventsHandler.get();\r\n            var groupedTiming = {};\r\n            try {\r\n                for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\r\n                    var event_1 = events_1_1.value;\r\n                    if (event_1.type === 'network' &&\r\n                        ['XHR', 'Fetch'].includes(event_1.data.req.type) &&\r\n                        event_1.data.res != null) {\r\n                        var url = new URL(event_1.data.req.url);\r\n                        // Keeping keys short so we dont waste a ton of space encoding keys\r\n                        var urlKey = JSON.stringify({\r\n                            m: event_1.data.req.method,\r\n                            h: url.host,\r\n                            p: url.pathname,\r\n                        });\r\n                        if ([\r\n                            'ingest.sentry.io',\r\n                            'sessions.bugsnag.com',\r\n                            'api-iam.intercom.io',\r\n                            'www.google-analytics.com',\r\n                        ].includes(url.hostname) === false &&\r\n                            event_1.data.req.url.indexOf('zendesk.com/embeddable') === -1) {\r\n                            // Round to nearest ms\r\n                            var took = Math.round((event_1.data.res.timestamp - event_1.data.req.timestamp) * 1000);\r\n                            if (Array.isArray(groupedTiming[urlKey])) {\r\n                                groupedTiming[urlKey].push(took);\r\n                            }\r\n                            else {\r\n                                groupedTiming[urlKey] = [took];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return groupedTiming;\r\n        };\r\n        this.connect = function () { return __awaiter(_this, void 0, void 0, function () {\r\n            var _a, _b, Log, Network_1, Performance_1, Runtime, e_2;\r\n            var _this = this;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _c.trys.push([0, 6, , 7]);\r\n                        _a = this;\r\n                        return [4 /*yield*/, CDP({ port: this.rdp })];\r\n                    case 1:\r\n                        _a.client = _c.sent();\r\n                        _b = this.client, Log = _b.Log, Network_1 = _b.Network, Performance_1 = _b.Performance, Runtime = _b.Runtime;\r\n                        /** captures logs from the browser */\r\n                        Log.on('entryAdded', function (params) {\r\n                            _this.pushEvent(createDeploySentinelEvent('browserLogEntry', params.entry));\r\n                        });\r\n                        return [4 /*yield*/, Log.enable()];\r\n                    case 2:\r\n                        _c.sent();\r\n                        // there is no guarantee whether requestWillBeSent or requestWillBeSentExtraInfo\r\n                        // will be fired first for the same request.\r\n                        Network_1.on('requestWillBeSent', function (params) {\r\n                            var shouldBypass = checkShouldBypass(params.request.url);\r\n                            var existingDsEvent = _this.networkRequestEventMap.get(params.requestId);\r\n                            // Sometimes this handler may fire multiple times\r\n                            if (!shouldBypass && !existingDsEvent) {\r\n                                var dsEvent = createDeploySentinelEvent('network', {\r\n                                    req: _this.formatNetworkRequest(params),\r\n                                });\r\n                                // add extra info\r\n                                var requestExtraInfo = _this.networkRequestExtraInfo.get(params.requestId);\r\n                                if (requestExtraInfo) {\r\n                                    dsEvent.data.req.headers = __assign(__assign({}, dsEvent.data.req.headers), requestExtraInfo.headers);\r\n                                    dsEvent.data.req.connectTiming = requestExtraInfo.connectTiming;\r\n                                    dsEvent.data.req.associatedCookies =\r\n                                        requestExtraInfo.associatedCookies;\r\n                                }\r\n                                _this.networkRequestEventMap.set(params.requestId, dsEvent);\r\n                                _this.pushEvent(dsEvent);\r\n                            }\r\n                        });\r\n                        // EXPERIMENTAL\r\n                        Network_1.on('requestWillBeSentExtraInfo', function (params) {\r\n                            var dsEvent = _this.networkRequestEventMap.get(params.requestId);\r\n                            if (dsEvent) {\r\n                                // add extra info\r\n                                dsEvent.data.req.headers = __assign(__assign({}, dsEvent.data.req.headers), params.headers);\r\n                            }\r\n                            else {\r\n                                _this.networkRequestExtraInfo.set(params.requestId, params);\r\n                            }\r\n                        });\r\n                        Network_1.on('responseReceived', function (params) {\r\n                            var dsEvent = _this.networkRequestEventMap.get(params.requestId);\r\n                            if (!dsEvent) {\r\n                                return;\r\n                            }\r\n                            dsEvent.data.res = _this.formatNetworkResponse(params);\r\n                            // add extra info\r\n                            var responseExtraInfo = _this.networkResponseExtraInfo.get(params.requestId);\r\n                            if (responseExtraInfo) {\r\n                                dsEvent.data.res.headers = __assign(__assign({}, dsEvent.data.res.headers), responseExtraInfo.headers);\r\n                            }\r\n                        });\r\n                        // EXPERIMENTAL\r\n                        Network_1.on('responseReceivedExtraInfo', function (params) {\r\n                            var dsEvent = _this.networkRequestEventMap.get(params.requestId);\r\n                            if (!dsEvent) {\r\n                                return;\r\n                            }\r\n                            var response = dsEvent.data.res;\r\n                            if (response) {\r\n                                // add extra info\r\n                                response.headers = __assign(__assign({}, response.headers), params.headers);\r\n                            }\r\n                            else {\r\n                                _this.networkResponseExtraInfo.set(params.requestId, params);\r\n                            }\r\n                        });\r\n                        // https://github.com/cyrus-and/chrome-remote-interface/issues/260#issuecomment-328274165\r\n                        Network_1.on('loadingFinished', function (_a) {\r\n                            var requestId = _a.requestId;\r\n                            return __awaiter(_this, void 0, void 0, function () {\r\n                                var dsEvent, response, body, base64Encoded, bodySize, isIgnoredResourceType, respBody, e_3;\r\n                                return __generator(this, function (_b) {\r\n                                    switch (_b.label) {\r\n                                        case 0:\r\n                                            dsEvent = this.networkRequestEventMap.get(requestId);\r\n                                            if (!dsEvent) {\r\n                                                return [2 /*return*/];\r\n                                            }\r\n                                            response = dsEvent.data.res;\r\n                                            if (!response) return [3 /*break*/, 7];\r\n                                            body = null;\r\n                                            base64Encoded = null;\r\n                                            bodySize = null;\r\n                                            isIgnoredResourceType = IGNORED_NETWORK_RESOURCE_TYPES.includes(response.type);\r\n                                            _b.label = 1;\r\n                                        case 1:\r\n                                            _b.trys.push([1, 5, 6, 7]);\r\n                                            if (!isIgnoredResourceType) return [3 /*break*/, 2];\r\n                                            bodySize = 0;\r\n                                            return [3 /*break*/, 4];\r\n                                        case 2: return [4 /*yield*/, Network_1.getResponseBody({\r\n                                                requestId: requestId,\r\n                                            })];\r\n                                        case 3:\r\n                                            respBody = _b.sent();\r\n                                            body = respBody.body;\r\n                                            bodySize = Buffer.byteLength(body, 'utf8');\r\n                                            base64Encoded = respBody.base64Encoded;\r\n                                            _b.label = 4;\r\n                                        case 4: return [3 /*break*/, 7];\r\n                                        case 5:\r\n                                            e_3 = _b.sent();\r\n                                            // Usually this means the page has navigated away from the request\r\n                                            // See: https://github.com/microsoft/playwright/issues/7831\r\n                                            body =\r\n                                                'The browser navigated to a new page before this response body was captured. Contact DeploySentinel support for more help.';\r\n                                            return [3 /*break*/, 7];\r\n                                        case 6:\r\n                                            response.bodySize = bodySize;\r\n                                            response.base64Encoded = base64Encoded;\r\n                                            response.body =\r\n                                                base64Encoded || isIgnoredResourceType\r\n                                                    ? 'Detected binary response or JS file, excluding from capture. Contact DeploySentinel support for more help.'\r\n                                                    : body;\r\n                                            return [7 /*endfinally*/];\r\n                                        case 7: return [2 /*return*/];\r\n                                    }\r\n                                });\r\n                            });\r\n                        });\r\n                        Network_1.on('loadingFailed', function (_a) {\r\n                            var requestId = _a.requestId, timestamp = _a.timestamp, type = _a.type, errorText = _a.errorText, canceled = _a.canceled;\r\n                            return __awaiter(_this, void 0, void 0, function () {\r\n                                var dsEvent;\r\n                                return __generator(this, function (_b) {\r\n                                    dsEvent = this.networkRequestEventMap.get(requestId);\r\n                                    if (!dsEvent) {\r\n                                        return [2 /*return*/];\r\n                                    }\r\n                                    dsEvent.data.loadingFailed = {\r\n                                        canceled: canceled,\r\n                                        errorText: errorText,\r\n                                        timestamp: timestamp,\r\n                                        type: type,\r\n                                    };\r\n                                    return [2 /*return*/];\r\n                                });\r\n                            });\r\n                        });\r\n                        Network_1.on('requestServedFromCache', function (_a) {\r\n                            var requestId = _a.requestId;\r\n                            return __awaiter(_this, void 0, void 0, function () {\r\n                                var dsEvent;\r\n                                return __generator(this, function (_b) {\r\n                                    dsEvent = this.networkRequestEventMap.get(requestId);\r\n                                    if (!dsEvent) {\r\n                                        return [2 /*return*/];\r\n                                    }\r\n                                    dsEvent.data.requestServedFromCache = true;\r\n                                    return [2 /*return*/];\r\n                                });\r\n                            });\r\n                        });\r\n                        return [4 /*yield*/, Network_1.enable({\r\n                                maxTotalBufferSize: 1024 * 1024 * 64,\r\n                                maxResourceBufferSize: 1024 * 1024 * 16,\r\n                            })];\r\n                    case 3:\r\n                        _c.sent();\r\n                        Runtime.on('consoleAPICalled', function (params) {\r\n                            _this.pushEvent(createDeploySentinelEvent('console', {\r\n                                args: params.args,\r\n                                // stackTrace: params.stackTrace, // TODO -> decide if we need this\r\n                                timestamp: params.timestamp,\r\n                                type: params.type,\r\n                            }));\r\n                        });\r\n                        Runtime.on('exceptionThrown', function (params) {\r\n                            _this.pushEvent(createDeploySentinelEvent('exception', {\r\n                                timestamp: params.timestamp,\r\n                                details: params.exceptionDetails,\r\n                            }));\r\n                        });\r\n                        return [4 /*yield*/, Runtime.enable()];\r\n                    case 4:\r\n                        _c.sent();\r\n                        return [4 /*yield*/, Performance_1.enable({ timeDomain: 'timeTicks' })];\r\n                    case 5:\r\n                        _c.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_2 = _c.sent();\r\n                        setTimeout(this.connect, 100);\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        this.rdp = rdp;\r\n        this.logger = logger;\r\n        this.debuggerOptions = debuggerOptions;\r\n        this.eventsHandler = new EventsHandler();\r\n    }\r\n    CRIClient.prototype.shouldFilterNetworkEvent = function (_a, beforeNetworkSend) {\r\n        var request = _a.request, response = _a.response;\r\n        if (beforeNetworkSend) {\r\n            return validators.isNullish(beforeNetworkSend({\r\n                // TODO: DEPRECATED ----------------------\r\n                url: request.url,\r\n                method: request.method,\r\n                headers: request.headers,\r\n                // ---------------------------------------\r\n                request: request,\r\n                response: response,\r\n            }));\r\n        }\r\n        return false;\r\n    };\r\n    CRIClient.prototype.formatNetworkRequest = function (req) {\r\n        return {\r\n            id: req.requestId,\r\n            timestamp: req.timestamp,\r\n            url: req.request.url,\r\n            headers: req.request.headers,\r\n            method: req.request.method,\r\n            type: req.type,\r\n            // TODO: Query\r\n            body: req.request.postData,\r\n            isSameSite: req.request.isSameSite,\r\n            referrerPolicy: req.request.referrerPolicy,\r\n        };\r\n    };\r\n    CRIClient.prototype.formatNetworkResponse = function (res) {\r\n        return {\r\n            connectionReused: res.response.connectionReused,\r\n            encodedDataLength: res.response.encodedDataLength,\r\n            fromDiskCache: res.response.fromDiskCache,\r\n            fromPrefetchCache: res.response.fromPrefetchCache,\r\n            fromServiceWorker: res.response.fromServiceWorker,\r\n            headers: res.response.headers,\r\n            mimeType: res.response.mimeType,\r\n            protocol: res.response.protocol,\r\n            remoteIPAddress: res.response.remoteIPAddress,\r\n            remotePort: res.response.remotePort,\r\n            statusCode: res.response.status,\r\n            statusMessage: res.response.statusText,\r\n            timestamp: res.timestamp,\r\n            timing: res.response.timing,\r\n            type: res.type,\r\n        };\r\n    };\r\n    CRIClient.prototype.getEvents = function () {\r\n        var _this = this;\r\n        var events = this.eventsHandler.get();\r\n        return (events\r\n            // apply custom filtering\r\n            .filter(function (event) {\r\n            var _a;\r\n            if (event.type === 'network') {\r\n                return !_this.shouldFilterNetworkEvent({\r\n                    request: event.data.req,\r\n                    response: event.data.res,\r\n                }, (_a = _this.debuggerOptions) === null || _a === void 0 ? void 0 : _a.beforeNetworkSend);\r\n            }\r\n            return true;\r\n        }));\r\n    };\r\n    CRIClient.prototype.pushEvent = function (event) {\r\n        this.eventsHandler.push(event);\r\n    };\r\n    CRIClient.prototype.clearEvents = function () {\r\n        this.eventsHandler.clear();\r\n    };\r\n    CRIClient.prototype.clearLocalCache = function () {\r\n        this.networkRequestEventMap.clear();\r\n        this.networkRequestExtraInfo.clear();\r\n        this.networkResponseExtraInfo.clear();\r\n    };\r\n    CRIClient.prototype.getPerformanceMetrics = function () {\r\n        if (this.client) {\r\n            return this.client.Performance.getMetrics();\r\n        }\r\n        return null;\r\n    };\r\n    CRIClient.prototype.disconnect = function () {\r\n        if (this.client) {\r\n            return this.client.close();\r\n        }\r\n    };\r\n    return CRIClient;\r\n}());\r\nexport default CRIClient;\r\n//# sourceMappingURL=cri.js.map","references":["/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/@types/chrome-remote-interface/index.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/@types/lodash/index.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/@types/minimatch/index.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/devtools-protocol/types/protocol.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/types.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/clients/api.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/utils/shared.ts"],"map":"{\"version\":3,\"file\":\"cri.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/clients/cri.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/clients/cri.d.ts","writeByteOrderMark":false,"text":"import type { Protocol } from 'devtools-protocol/types/protocol';\r\nimport { DSEvent, DebuggerOptions } from '../types';\r\nimport { Logger } from './api';\r\nexport declare const checkShouldBypass: (url: string) => boolean;\r\nexport default class CRIClient {\r\n    private readonly debuggerOptions?;\r\n    private readonly rdp;\r\n    private readonly logger;\r\n    private client;\r\n    private eventsHandler;\r\n    private networkRequestEventMap;\r\n    private networkRequestExtraInfo;\r\n    private networkResponseExtraInfo;\r\n    private shouldFilterNetworkEvent;\r\n    private formatNetworkRequest;\r\n    private formatNetworkResponse;\r\n    constructor(rdp: number, logger: Logger, debuggerOptions?: DebuggerOptions);\r\n    getEvents(): DSEvent[];\r\n    getNetworkTimings: () => {\r\n        [url: string]: number[];\r\n    };\r\n    pushEvent(event: DSEvent): void;\r\n    clearEvents(): void;\r\n    clearLocalCache(): void;\r\n    getPerformanceMetrics(): Promise<Protocol.Performance.GetMetricsResponse> | null;\r\n    disconnect(): Promise<void> | undefined;\r\n    connect: () => Promise<void>;\r\n}\r\n"}}
