{"code":"// WARNING: only on the node side\r\nimport { __assign, __awaiter, __generator } from \"tslib\";\r\nimport { version as PKG_VERSION } from '../../package.json';\r\nimport { buildAxiosInstance, performanceNow } from '../utils/shared';\r\nimport { LoggerSeverity, } from '../types';\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(apiClient) {\r\n        this.apiClient = apiClient;\r\n        this.verbose = true;\r\n    }\r\n    Logger.prototype.setVerbose = function (verbose) {\r\n        this.verbose = verbose;\r\n    };\r\n    Logger.prototype.info = function (loggerMessage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (this.verbose) {\r\n                    return [2 /*return*/, this.apiClient\r\n                            .sendMessage(loggerMessage.message instanceof Error\r\n                            ? loggerMessage.message\r\n                            : new Error(loggerMessage.message), loggerMessage.location, __assign(__assign({}, loggerMessage.meta), { severity: LoggerSeverity.Info }))\r\n                            .catch(function (error) { return console.log(error); })];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Logger.prototype.warning = function (loggerMessage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.apiClient\r\n                        .sendMessage(loggerMessage.message instanceof Error\r\n                        ? loggerMessage.message\r\n                        : new Error(loggerMessage.message), loggerMessage.location, __assign(__assign({}, loggerMessage.meta), { severity: LoggerSeverity.Warning }))\r\n                        .catch(function (error) { return console.log(error); })];\r\n            });\r\n        });\r\n    };\r\n    Logger.prototype.error = function (loggerMessage) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.apiClient\r\n                        .sendMessage(loggerMessage.message instanceof Error\r\n                        ? loggerMessage.message\r\n                        : new Error(loggerMessage.message), loggerMessage.location, __assign(__assign({}, loggerMessage.meta), { severity: LoggerSeverity.Error }))\r\n                        .catch(function (error) { return console.log(error); })];\r\n            });\r\n        });\r\n    };\r\n    return Logger;\r\n}());\r\nexport { Logger };\r\nvar APIClient = /** @class */ (function () {\r\n    function APIClient(config) {\r\n        this.apiKey = config.apiKey;\r\n        this.axiosInstance = buildAxiosInstance({\r\n            baseURL: config.baseUrl,\r\n            headers: {\r\n                'ds-api-key': config.apiKey,\r\n            },\r\n        });\r\n        this.buildId = config.buildId;\r\n        this.getRuntimeMetrics = config.getRuntimeMetrics;\r\n        this.verbose = Boolean(config.verbose);\r\n        this.logger = new Logger(this);\r\n    }\r\n    APIClient.prototype.setTestConfig = function (testConfig) {\r\n        this.testConfig = testConfig;\r\n    };\r\n    APIClient.prototype.setBuildId = function (buildId) {\r\n        this.buildId = buildId;\r\n    };\r\n    // Only used in Logger\r\n    APIClient.prototype.sendMessage = function (error, location, meta) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var runtimeMetrics, e_1, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.verbose && (meta === null || meta === void 0 ? void 0 : meta.severity) === LoggerSeverity.Error) {\r\n                            console.log({\r\n                                error: error,\r\n                                location: location,\r\n                                meta: meta,\r\n                            });\r\n                        }\r\n                        runtimeMetrics = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.getRuntimeMetrics()];\r\n                    case 2:\r\n                        runtimeMetrics = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 4:\r\n                        _a.trys.push([4, 6, , 7]);\r\n                        return [4 /*yield*/, this.axiosInstance.post('/message', __assign({ debuggerVersion: PKG_VERSION, buildId: this.buildId, runId: this.runId, apiKey: this.apiKey, message: error.message, name: error.name, stack: error.stack, location: location, ts: Date.now(), offset: performanceNow(), runtime: runtimeMetrics }, meta))];\r\n                    case 5:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_2 = _a.sent();\r\n                        if (this.verbose) {\r\n                            console.log(e_2);\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClient.prototype.createRun = function (runPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var run, resp, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        run = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.axiosInstance.post('/run', __assign(__assign({}, runPayload), { batchId: this.buildId, debuggerVersion: PKG_VERSION, testConfig: this.testConfig }))];\r\n                    case 2:\r\n                        resp = _a.sent();\r\n                        run = resp.data;\r\n                        this.runId = run === null || run === void 0 ? void 0 : run._id;\r\n                        return [2 /*return*/, run];\r\n                    case 3:\r\n                        e_3 = _a.sent();\r\n                        this.logger.error({\r\n                            message: e_3,\r\n                            location: 'APIClient:createRun',\r\n                            meta: { runPayload: runPayload },\r\n                        });\r\n                        return [2 /*return*/, run];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClient.prototype.patchRun = function (runId, runPayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.axiosInstance.patch(\"/run/\".concat(runId), __assign(__assign({}, runPayload), { batchId: this.buildId, debuggerVersion: PKG_VERSION }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_4 = _a.sent();\r\n                        this.logger.error({\r\n                            message: e_4,\r\n                            location: 'APIClient:patchRun',\r\n                            meta: { runId: runId, runPayload: runPayload },\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClient.prototype.sendReport = function (ciProvider, commentInfo, // FIXME typo\r\n    runResults) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.axiosInstance.post('/report', {\r\n                                buildId: this.buildId,\r\n                                runId: this.runId,\r\n                                ciProvider: ciProvider,\r\n                                commentInfo: commentInfo,\r\n                                runResults: runResults,\r\n                                debuggerVersion: PKG_VERSION,\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_5 = _a.sent();\r\n                        this.logger.error({\r\n                            message: e_5,\r\n                            location: 'APIClient:sendReport',\r\n                            meta: {\r\n                                ciProvider: ciProvider,\r\n                                commentInfo: commentInfo,\r\n                                runResults: runResults,\r\n                            },\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    APIClient.prototype.getTeam = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resp, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.axiosInstance.get('/team')];\r\n                    case 1:\r\n                        resp = _a.sent();\r\n                        return [2 /*return*/, resp.data];\r\n                    case 2:\r\n                        e_6 = _a.sent();\r\n                        this.logger.error({\r\n                            message: e_6,\r\n                            location: 'APIClient:getTeam',\r\n                        });\r\n                        return [3 /*break*/, 3];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return APIClient;\r\n}());\r\nexport default APIClient;\r\n//# sourceMappingURL=api.js.map","references":["/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/axios/index.d.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/package.json","/home/warren/Codes/deploysentinel/cypress-quarantine/src/utils/shared.ts","/home/warren/Codes/deploysentinel/cypress-quarantine/src/types.ts"],"map":"{\"version\":3,\"file\":\"api.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/clients/api.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/warren/Codes/deploysentinel/cypress-quarantine/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/clients/api.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"cypress\" />\r\nimport { APIClientConfig, CommitInfo, DSRun, LoggerMessage, PatchRunPayload, RunPayload, TestConfig } from '../types';\r\nexport declare class Logger {\r\n    private readonly apiClient;\r\n    verbose: boolean;\r\n    constructor(apiClient: APIClient);\r\n    setVerbose(verbose: boolean): void;\r\n    info(loggerMessage: LoggerMessage): Promise<void>;\r\n    warning(loggerMessage: LoggerMessage): Promise<void>;\r\n    error(loggerMessage: LoggerMessage): Promise<void>;\r\n}\r\nexport default class APIClient {\r\n    private readonly apiKey;\r\n    private readonly axiosInstance;\r\n    private readonly verbose;\r\n    private readonly getRuntimeMetrics;\r\n    private buildId;\r\n    private testConfig;\r\n    private runId;\r\n    readonly logger: Logger;\r\n    constructor(config: APIClientConfig);\r\n    setTestConfig(testConfig: TestConfig): void;\r\n    setBuildId(buildId: string | undefined): void;\r\n    sendMessage(error: Error, location: string, meta?: {\r\n        [key: string]: unknown;\r\n    }): Promise<void>;\r\n    createRun(runPayload: RunPayload): Promise<DSRun | null>;\r\n    patchRun(runId: string, runPayload: PatchRunPayload): Promise<void>;\r\n    sendReport(ciProvider: string | null, commentInfo: CommitInfo, // FIXME typo\r\n    runResults?: Partial<CypressCommandLine.CypressRunResult | CypressCommandLine.CypressFailedRunResult>): Promise<void>;\r\n    getTeam(): Promise<any>;\r\n}\r\n"}}
